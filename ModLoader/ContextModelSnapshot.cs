// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModLoader.Model.Entities;

#nullable disable

namespace ModLoader.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.8");

            modelBuilder.Entity("ModLoader.Model.Entities.Base.Games", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Games");
                });

            modelBuilder.Entity("ModLoader.Model.Entities.Base.Mod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PackId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("PackId");

                    b.ToTable("Mods");
                });

            modelBuilder.Entity("ModLoader.Model.Entities.Base.ModCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GamesId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GamesId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ModCollections");
                });

            modelBuilder.Entity("ModLoader.Model.Entities.Base.Pack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("TEXT");

                    b.Property<int>("ModCollectionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModCollectionId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Packs");
                });

            modelBuilder.Entity("ModLoader.Model.Entities.Base.WebResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AboutMod")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateUpdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LinkDownload")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ModId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SourseDownload")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ModId");

                    b.ToTable("WebResources");
                });

            modelBuilder.Entity("ModLoader.Model.Entities.Base.Mod", b =>
                {
                    b.HasOne("ModLoader.Model.Entities.Base.Pack", "Pack")
                        .WithMany()
                        .HasForeignKey("PackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pack");
                });

            modelBuilder.Entity("ModLoader.Model.Entities.Base.ModCollection", b =>
                {
                    b.HasOne("ModLoader.Model.Entities.Base.Games", "Games")
                        .WithMany()
                        .HasForeignKey("GamesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Games");
                });

            modelBuilder.Entity("ModLoader.Model.Entities.Base.Pack", b =>
                {
                    b.HasOne("ModLoader.Model.Entities.Base.ModCollection", "ModCollection")
                        .WithMany()
                        .HasForeignKey("ModCollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ModCollection");
                });

            modelBuilder.Entity("ModLoader.Model.Entities.Base.WebResource", b =>
                {
                    b.HasOne("ModLoader.Model.Entities.Base.Mod", "Mod")
                        .WithMany()
                        .HasForeignKey("ModId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mod");
                });
#pragma warning restore 612, 618
        }
    }
}
